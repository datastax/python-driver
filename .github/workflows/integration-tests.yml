name: Integration tests

on:
  push:
    branches:
      - master
      - 'branch-**'
  pull_request:
    paths-ignore:
     - docs/*
     - examples/*
     - scripts/*
     - .gitignore
     - '*.rst'
     - '*.ini'
     - LICENSE
     - .github/dependabot.yml
     - .github/pull_request_template.md
  workflow_dispatch:

jobs:
  tests:
    name: test ${{ matrix.event_loop_manager }} (${{ matrix.python-version }})
    if: "!contains(github.event.pull_request.labels.*.name, 'disable-integration-tests')"
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        java-version: [8]
        python-version: ["3.9", "3.11", "3.12", "3.13"]
        event_loop_manager: ["libev", "asyncio", "asyncore"]
        exclude:
          - python-version: "3.12"
            event_loop_manager: "asyncore"
          - python-version: "3.13"
            event_loop_manager: "asyncore"

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'adopt'

    - name: Install libev
      run: sudo apt-get install libev4 libev-dev

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}

    # This is to get honest accounting of test time vs download time vs build time.
    # Not strictly necessary for running tests.
    - name: Build driver
      run: uv sync

    # This is to get honest accounting of test time vs download time vs build time.
    # Not strictly necessary for running tests.
    - name: Download Scylla
      run: |
        export SCYLLA_VERSION='release:6.2'
        uv run ccm create scylla-driver-temp -n 1 --scylla --version ${SCYLLA_VERSION}
        uv run ccm remove

    - name: Test with pytest
      run: |
        export EVENT_LOOP_MANAGER=${{ matrix.event_loop_manager }}
        export SCYLLA_VERSION='release:2025.2'
        export PROTOCOL_VERSION=4
        uv run pytest tests/integration/standard/ tests/integration/cqlengine/
